#!/usr/bin/env ruby
# Based on a script by Alex Payne: https://gist.github.com/106869/15b2e64325ee26f2404679eb54d77f59f26c1994

ROOT_DIR = File.expand_path('..', File.dirname(__FILE__))

def sluggerize(text)
  separator = '-'
  re_separator = Regexp.escape(separator)
  result = text.dup
  result.gsub!(/[^a-z0-9\-_\+]+/i, separator)            # Turn non-slug chars into the separator.
  result.gsub!(/#{re_separator}{2,}/, separator)         # No more than one of the separator in a row.
  result.gsub!(/^#{re_separator}|#{re_separator}$/, '')  # Remove leading/trailing separator.
  result.downcase!
  result
end

title = ARGV[0]
tags = ARGV[1]

unless title
  puts %{Usage: #{$0} "The Post Title"[ "Tag 1, Tag 2"]}
  exit -1
end

datetime = Time.now.strftime('%Y-%m-%d')
slug = sluggerize(title)

# E.g. 2006-07-16_11-41-batch-open-urls-from-clipboard.markdown
path = "#{ROOT_DIR}/_posts/#{datetime}-#{slug}.markdown"

header = <<-END
---
title: #{title}#{"\ntags:  [#{tags}]" if tags}
---

END

File.open(path, 'w') {|f| f << header }
system('g', path)
